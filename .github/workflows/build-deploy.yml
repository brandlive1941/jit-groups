name: Just-In-Time Access - Build and Deploy to Cloud Run

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        type: environment
        required: true
        default: 'brandlive-admin'
        
env:
  REGISTRY: 'gcr.io'
  ARTIFACT_REPO: 'jit-access'
  NAME: 'jit-access'
  DOCKERFILE_PATH: './sources'

jobs: 
  build:
    name: Build Image
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    permissions:
      contents: read
      id-token: write
      pull-requests: write

    steps:
    - name: Check out code
      id: checkout
      uses: actions/checkout@v4

    - name: Authenticate to GCP
      id: auth
      uses: google-github-actions/auth@v2
      with:
        token_format: access_token
        workload_identity_provider: ${{ vars.WIF_PROVIDER }}
        service_account: ${{ vars.WIF_SERVICE_ACCOUNT }}

    - name: Set short git commit SHA
      id: vars
      run: |
        calculatedSha=$(git rev-parse --short ${{ github.sha }})
        echo "COMMIT_SHORT_SHA=$calculatedSha" >> $GITHUB_ENV

    - name: Trigger GCP Cloud Build
      id: trigger-build
      run: |
        gcloud builds submit --config cloudbuild.yaml --substitutions _ARTIFACT_REPO=${{ env.ARTIFACT_REPO }},_DOCKERFILE_PATH=${{ env.DOCKERFILE_PATH }},_IMAGE_NAME=${{ env.NAME }},_IMAGE_TAG=${{ env.COMMIT_SHORT_SHA }}

    - id: 'deploy'
      uses: 'google-github-actions/deploy-cloudrun@v2'
      with:
        service: 'jit-service'
        image: 'us-docker.pkg.dev/${{ vars.PROJECT }}/${{ env.ARTIFACT_REPO }}/${{ env.NAME }}:${{ env.COMMIT_SHORT_SHA }}'
        metadata: service.yaml

    - name: Deploy to Cloud Run
      id: deploy-cloudrun
      uses: brandlive1941/action-google-cloud-deploy@v1.0.8
      with: 
        deploy_type: cloudrun
        project_id: ${{ vars.PROJECT }}
        environment: ${{ github.event.inputs.environment }}
        region: ${{ vars.REGION }}
        service_definition: "service.yaml"
        service_name: "${{ env.NAME }}-${{ vars.REGION }}-cr"
        image: "us-docker.pkg.dev/${{ env.ARTIFACT_REPO }}/${{ env.NAME }}:${{ env.COMMIT_SHORT_SHA }}"
        cloud_run_sa: ${{ vars.CLOUD_RUN_SA }}
        vpc_access_connector: ${{ vars.VPC_ACCESS_CONNECTOR }}

